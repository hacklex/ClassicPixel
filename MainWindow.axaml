<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:PixelEditor.ViewModels"
        xmlns:pixelEditor="clr-namespace:PixelEditor"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="600"
        x:Class="PixelEditor.MainWindow" 
        Icon="/Assets/Bitmap.ico" 
        x:DataType="{x:Type vm:MainViewModel}"
        RenderOptions.TextRenderingMode="SubpixelAntialias"
        RenderOptions.BitmapInterpolationMode="HighQuality"
        FontFamily="Segoe UI, SF Pro Display, Noto Sans, Cantarel"
        TextBlock.LetterSpacing="0"
        FontSize="12"
        ExtendClientAreaToDecorationsHint="True"
        ExtendClientAreaChromeHints="PreferSystemChrome"
        ExtendClientAreaTitleBarHeightHint="25"
        PointerPressed="OnTitlePointerPressed"
        PointerReleased="OnTitlePointerReleased"
        PointerMoved="OnTitlePointerMoved"
        SystemDecorations="{OnPlatform Default='BorderOnly', macOS='None'}"
        Title="Pixel Art Editor">
    <Window.Styles>
        <Style Selector="CaptionButtons">
            <Setter Property="Margin" Value="0 0 6 0"></Setter>
        </Style> 
    </Window.Styles>
    
    <Window.Resources>
        <pixelEditor:ToolTypeConverter x:Key="ToolTypeConverter"/>
    </Window.Resources>
    
    <Window.DataContext>
            <vm:MainViewModel  />
    </Window.DataContext> 
    <ClassicBorderDecorator BorderThickness="2" BorderStyle="AltRaised">
        
        <DockPanel>
            <Border Margin="2 2 2 0" Background="{Binding IsActive, Converter={x:Static pixelEditor:IsActiveToBgBrushConverter.Instance}, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" DockPanel.Dock="Top">
                <Grid >
                    <DockPanel x:Name="CustomTitleBar" PointerReleased="OnTitlePointerReleased" PointerMoved="OnTitlePointerMoved" PointerPressed="OnTitlePointerPressed" >
                        <Image VerticalAlignment="Center" Source="/Assets/Bitmap16.png" Height="16" Margin="2 1 2 1"></Image>
                        <OnPlatform>
                            <OnPlatform.Default>
                                <Grid/>
                            </OnPlatform.Default>
                            <OnPlatform.macOS>
                                <CaptionButtons Loaded="OnMacCaptionButtonsLoaded" DockPanel.Dock="Right" Margin="0 0 1 0" />
                            </OnPlatform.macOS>
                        </OnPlatform>
                        <TextBlock Margin="{OnPlatform Default='0 0 0 0', macOS='0 2 0 -1'}" IsHitTestVisible="False" VerticalAlignment="Center" Foreground="White" Text="{Binding Title, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"></TextBlock>
                    </DockPanel>
                </Grid>
            </Border>
            <DockPanel> 
                
                <!-- Menu -->
                <Menu DockPanel.Dock="Top" Margin="0" Padding="0">
                        <Menu.Styles>
                            <Style Selector="MenuItem ClassicBorderDecorator ClassicBorderDecorator">
                                <OnPlatform>
                                    <OnPlatform.macOS>
                                        <Setter Property="Margin" Value="0 0 0 0"></Setter> 
                                    </OnPlatform.macOS>
                                    <OnPlatform.Default>
                                        <Setter Property="Margin" Value="0 1 0 0"></Setter> 
                                    </OnPlatform.Default>
                                </OnPlatform>
                            </Style>
                            <Style Selector="MenuItem">
                                <OnPlatform>
                                    <OnPlatform.Default> 
                                        <Setter Property="Margin" Value="0 "></Setter> 
                                    </OnPlatform.Default>
                                    <OnPlatform.macOS>
                                        <Setter Property="Padding" Value="5 "></Setter> 
                                    </OnPlatform.macOS> 
                                </OnPlatform>
                            </Style>
                            <Style Selector="MenuItem MenuItem">
                                <OnPlatform>
                                    <OnPlatform.Default>
                                        <Setter Property="Padding" Value="0 0 0 1"></Setter> 
                                    </OnPlatform.Default>
                                    <OnPlatform.macOS>
                                        <Setter Property="Padding" Value="0 1 0 -1"></Setter> 
                                    </OnPlatform.macOS>
                                </OnPlatform>
                            </Style>
                            <Style Selector="AccessText">
                                <Setter Property="ClipToBounds" Value="False"></Setter>
                            </Style>
                        </Menu.Styles>
                    <MenuItem Height="22" Header="File">
                        <MenuItem Header="New" Command="{Binding NewCommand}"/>
                        <MenuItem Header="Open" Command="{Binding OpenCommand}"/>
                        <MenuItem Header="Save" Command="{Binding SaveCommand}"/>
                        <Separator/>
                        <MenuItem Header="Exit" Command="{Binding ExitCommand}"/>
                    </MenuItem>
                    <MenuItem Height="22" Header="Palette">
                        <MenuItem Header="Reset to Default" Command="{Binding ColorPaletteViewModel.LoadDefaultColorsCommand}" />
                        <MenuItem Header="Add Current Color" Command="{Binding AddCurrentColorCommand}" />
                    </MenuItem>
                    <MenuItem Height="22" Header="View">
                        <MenuItem Header="Center Canvas" Click="CenterCanvas_Click" />
                    </MenuItem>
                </Menu>
            
                
                <!-- Status Bar -->
                <ClassicBorderDecorator BorderStyle="ThinPressed" BorderThickness="1" Margin="1 1" DockPanel.Dock="Bottom">
                    <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" Margin="{OnPlatform '3, -2, 3, 1', macOS='3, 2, 3, 1.5', x:TypeArguments=Thickness}">
                        <TextBlock VerticalAlignment="Center" Text="{Binding StatusText}" Margin="0 0 5 0"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding PositionText}" Margin="5 0"/>
                        <TextBlock VerticalAlignment="Center" Text="{Binding CanvasSizeText}" Margin="5 0"/>
                        <TextBlock VerticalAlignment="Center" Margin="5 0">
                            Scaled Canvas: <Run Text="{Binding Bounds.Width, ElementName=EditorImage}" />x<Run Text="{Binding Bounds.Height, ElementName=EditorImage}" />
                        </TextBlock>
                        <TextBlock VerticalAlignment="Center" IsVisible="{Binding SelectedTool, Converter={StaticResource ToolTypeConverter}, ConverterParameter=MagicWand}" Margin="5 0">
                            Magic Wand Tolerance: <Run Text="{Binding MagicWandTolerance}" /> (Use +/- to adjust)
                        </TextBlock>
                        <TextBlock VerticalAlignment="Center" IsVisible="{Binding SelectedTool, Converter={StaticResource ToolTypeConverter}, ConverterParameter=Eraser}" Margin="5 0">
                            Eraser: Left click to erase, Right click for smart erase (Tolerance: <Run Text="{Binding MagicWandTolerance}" />)
                        </TextBlock>
                        <TextBlock VerticalAlignment="Center" IsVisible="{Binding SelectedTool, Converter={StaticResource ToolTypeConverter}, ConverterParameter=ColorPicker}" Margin="5 0">
                            Color Picker: Left click to set primary color, Right click to set secondary color
                        </TextBlock>
                    </StackPanel>
                </ClassicBorderDecorator>

                <!-- Color Palette -->
                <Grid DockPanel.Dock="Bottom" Margin="1">
                    <StackPanel Orientation="Horizontal">
                        <ClassicBorderDecorator PointerPressed="OnTransparentColorPointerPressed" Background="{StaticResource BgBrush}" VerticalAlignment="Top" Width="32" Height="32" BorderStyle="Sunken" BorderThickness="2" Margin="0">
                            <Grid>
                                <ClassicBorderDecorator Margin="2 3" HorizontalAlignment="Right" VerticalAlignment="Bottom"  Background="{StaticResource BgBrush}"
                                        Width="15" Height="15" BorderThickness="1" BorderStyle="ThinRaised">
                                    <Border BorderThickness="1" BorderBrush="#c0c0c0" Background="{Binding SecondaryColor, Converter={StaticResource ColorToBrushConverter}}" ></Border>
                                </ClassicBorderDecorator>
                                <ClassicBorderDecorator Margin="2 3" HorizontalAlignment="Left" VerticalAlignment="Top"  Background="{StaticResource BgBrush}"
                                                        BorderStyle="ThinRaised"
                                                        Width="15" Height="15" BorderThickness="1">
                                    <Border BorderThickness="1" BorderBrush="#c0c0c0" Background="{Binding PrimaryColor, Converter={StaticResource ColorToBrushConverter}}" ></Border>
                                </ClassicBorderDecorator>
                            </Grid>
                        </ClassicBorderDecorator>
                        <pixelEditor:ColorPaletteControl DataContext="{Binding ColorPaletteViewModel}" Height="34"/>
                    </StackPanel>
                </Grid>
                <TextBox DockPanel.Dock="Top" Text="{Binding Data, ElementName=UnusedToggle, Mode=OneWayToSource, Converter={x:Static pixelEditor:GeometryDataConverter.Instance}}"></TextBox>
                <!-- Tools -->
                <StackPanel Width="55" DockPanel.Dock="Left">
                    <WrapPanel HorizontalAlignment="Center" Orientation="Horizontal" Margin="0 0 1 0">
                        <WrapPanel.Styles>
                            <Style Selector="ToggleButton:checked Grid">
                                <Setter Property="Margin" Value="1 1 -1 -1"></Setter>
                            </Style>
                            <Style Selector="ToggleButton">
                                <Setter Property="Height" Value="25"></Setter>
                                <Setter Property="Width" Value="25"></Setter>
                            </Style>
                        </WrapPanel.Styles>
                          
                        <ToggleButton ToolTip.Tip="Selection [s]" Tag="Selection" IsCheckedChanged="ToggleButtonIsCheckedChanged" Padding="0" IsChecked="{Binding SelectedTool, Converter={StaticResource ToolTypeConverter}, ConverterParameter=Selection}" Focusable="False">
                            <Grid Width="16" Height="16">
                                <Image Margin="0" Height="16" Source="/Assets/Selection16.png"></Image>
                            </Grid>
                        </ToggleButton>
                        <ToggleButton ToolTip.Tip="Magic Wand [s,s]" Tag="MagicWand" IsCheckedChanged="ToggleButtonIsCheckedChanged" Padding="0" IsChecked="{Binding SelectedTool, Converter={StaticResource ToolTypeConverter}, ConverterParameter=MagicWand}" Focusable="False">
                            <Grid Width="16" Height="16">
                                <Image Source="/Assets/MagicWand16.png"></Image>
                            </Grid>
                        </ToggleButton>
                        <ToggleButton ToolTip.Tip="Pencil [b]" Tag="Pencil" IsCheckedChanged="ToggleButtonIsCheckedChanged" Padding="0" IsChecked="{Binding SelectedTool, Converter={StaticResource ToolTypeConverter}, ConverterParameter=Pencil}" Focusable="False">
                            <Grid Width="16" Height="16">
                                <Path Width="16" Height="16" StrokeThickness="1" Margin="0 -1 0 1" StrokeJoin="Round" Data="M13.5 3.5l2 2-8 8-4 2L5.5 11.5ZM1.5 15.5Q.5 15.5.5 12.5.5 7.5 2.5 7.5 5.5 7.5 5.5 1.5M6 12 7 13 3.5 15.5 6 12Z" Stroke="Black"></Path>
                                <!-- <Image Margin="0" Height="16" Source="/Assets/Pencil16.png"></Image> -->
                            </Grid>
                        </ToggleButton>
                        <ToggleButton ToolTip.Tip="Straight Line [l]" Tag="StraightLine" IsCheckedChanged="ToggleButtonIsCheckedChanged" Padding="0" IsChecked="{Binding SelectedTool, Converter={StaticResource ToolTypeConverter}, ConverterParameter=StraightLine}" Focusable="False">
                            <Grid Width="16" Height="16">
                                <Path Margin="0" ClipToBounds="False" StrokeThickness="1" Stroke="Black" Data="M12.5 12.5q-.5 1 0 2 1 .5 2 0 .5-1 0-2-1-.5-2 0ZL3.5 3.5ZM3.5 3.5q.5-1 0-2-1-.5-2 0-.5 1 0 2 1 .5 2 0Z"></Path>
                                
                            </Grid>
                        </ToggleButton>
                        <ToggleButton ToolTip.Tip="Eraser [b]" Tag="Eraser" IsCheckedChanged="ToggleButtonIsCheckedChanged" Padding="0" IsChecked="{Binding SelectedTool, Converter={StaticResource ToolTypeConverter}, ConverterParameter=Eraser}" Focusable="False">
                            <Grid Width="16" Height="16">
                                <Path Stretch="None" Width="16" Height="16" Margin="0" ClipToBounds="False" StrokeThickness="1" Stroke="Black" Fill="Transparent" Data="M 8.5 10 v3.5 h-7 v-3.5"></Path>
                                <Path Stretch="None" Width="16" Height="16" Margin="0" ClipToBounds="False" StrokeJoin="Round" StrokeThickness="1" Stroke="Black" Fill="#ffff80" Data="M9.5 9.5 14.5 4.5 14.5 3.5 8.5 3.5 1.5 10.5"></Path>
                                <Path Stretch="None" Width="16" Height="16" Margin="0" ClipToBounds="False" StrokeJoin="Round" StrokeThickness="1" Stroke="Black" Fill="#808000" Data="M14.5 4.5v3L8.5 13.5V10.5Z"></Path>
                                                                
                                <!-- <Image Margin="0" Height="16" Source="/Assets/Eraser16.png"></Image> -->
                            </Grid>
                        </ToggleButton>
                        <ToggleButton ToolTip.Tip="Flood Fill [f]" Tag="Fill" IsCheckedChanged="ToggleButtonIsCheckedChanged" Padding="0" IsChecked="{Binding SelectedTool, Converter={StaticResource ToolTypeConverter}, ConverterParameter=Fill}" Focusable="False">
                            <Grid Width="16" Height="16">
                                <Path Width="16" Height="16" Margin="0 -1 0 1" ClipToBounds="False" StrokeThickness="1" Stroke="Black" Fill="Black" Data="M13.5 1.5 10.5 3.5 10.5 7.5M7.5 7.5 4.5 10.5 9.5 15.5 15.5 9.5 13.5 7.5 11.5 9.5 9.5 9.5ZM4.5 7.5 3.5 7.5 1.5 9.5 1.5 12.5.5 13.5.5 15.5 3.5 15.5 4.5 14.5 6.5 14.5 5.5 13.5 4.5 13.5 3.5 12.5 2.5 11.5 2.5 9.5Z"></Path>
                                <Path Width="16" Height="16" Margin="0 -1 0 1" ClipToBounds="False" StrokeThickness="1" Stroke="Black" Data="M7.5 7.5 L 10.5 4.5 13.5 7.5"></Path>
                                                               
                            </Grid>
                        </ToggleButton>
                        <ToggleButton ToolTip.Tip="Color Picker [k]" Tag="ColorPicker" IsCheckedChanged="ToggleButtonIsCheckedChanged" Padding="0" IsChecked="{Binding SelectedTool, Converter={StaticResource ToolTypeConverter}, ConverterParameter=ColorPicker}" Focusable="False">
                            <Grid Width="16" Height="16">
                                <Path Margin="0 0 0 0" UseLayoutRounding="False" Stroke="Black" StrokeJoin="Round"  StrokeThickness="1" Fill="Black" Width="16" Height="16"
                                      Data="M13.5 0.5 14.5 0.5 15.5 1.5 15.5 2.5 13.5 4.5 13.5 6.5 12.5 7.5 8.5 3.5 9.5 2.5 11.5 2.5ZM8.5 6.5 9.5 6.5 9.5 7.5 1.5 15.5 0.5 14.5Z M 0.5 15.5 1.5 15.5 0.5 15.5Z" ></Path>
                                <!-- <Path Stroke="#80000000" Data="M1.5 13.5 L 2.6 15.5" StrokeThickness="1"></Path> -->
                                <!-- <Image Margin="0" Height="16" Source="/Assets/ColorPicker16.png"></Image> -->
                            </Grid>
                        </ToggleButton> 
                         
                        <ToggleButton ToolTip.Tip="Unused" Tag="Unused" Padding="0" Focusable="False">
                            <Grid UseLayoutRounding="False" Width="16" Height="16"> 
                                <!-- <Path Stroke="#80000000" Data="M1.5 13.5 L 2.6 15.5" StrokeThickness="1"></Path> -->
                                <!-- <Image Margin="0" Height="16" Source="/Assets/ColorPicker16.png"></Image> -->
                                <Path x:Name="UnusedToggle" Margin="0 0 0 0" UseLayoutRounding="False" Stroke="Black" StrokeJoin="Round"  StrokeThickness="1" Fill="#808000" Width="16" Height="16"
                                          Data="M13.5 0.5 14.5 0.5 15.5 1.5 15.5 2.5 13.5 4.5 13.5 6.5 12.5 7.5 8.5 3.5 9.5 2.5 11.5 2.5ZM8.5 6.5 9.5 6.5 9.5 7.5 1.5 15.5 0.5 14.5Z M 0.5 15.5 1.5 15.5 0.5 15.5" ></Path>
                            </Grid>
                        </ToggleButton> 
                    </WrapPanel>
                    
                    <StackPanel IsVisible="{Binding IsToleranceSetupVisible}" Margin="0 2 0 0">
                        <TextBlock LetterSpacing="-0.2" Margin="1 0 0 0">Tolerance:</TextBlock>
                        <NumericUpDown Margin="2 0" Minimum="0" Maximum="765" Value="{Binding MagicWandTolerance}"></NumericUpDown>
                    </StackPanel>
                    
                    <ClassicBorderDecorator BorderThickness="1" BorderStyle="ThinPressed" HorizontalAlignment="Center" IsVisible="{Binding IsLineToolSelected}" Margin="0 2 0 0">
                        <StackPanel>
                            <RadioButton Margin="4 1" IsChecked="{Binding IsAntialiasingEnabled}">
                                <Grid VerticalAlignment="Center">
                                    <Image Width="24" Height="8" Source="/Assets/SmoothLine.png"></Image>
                                </Grid>
                            </RadioButton>
                            <RadioButton Margin="4 1" IsChecked="{Binding !IsAntialiasingEnabled}">
                                <Grid VerticalAlignment="Center">
                                    <Image Width="24" Height="8" Source="/Assets/SharpLine.png"></Image>
                                </Grid>
                            </RadioButton>
                        </StackPanel>
                    </ClassicBorderDecorator>
                    
                </StackPanel>

                
                <!-- Canvas --> 
                <ClassicBorderDecorator  
                          PointerPressed="Canvas_PointerPressed"
                          PointerMoved="Canvas_PointerMoved"
                          PointerReleased="Canvas_PointerReleased"
                          PointerWheelChanged="CanvasContainer_PointerWheelChanged"
                    Background="Gray" BorderStyle="Sunken" BorderThickness="2" Margin="0 0" >
                    <Grid x:Name="CanvasContainer" ClipToBounds="True">
                        <Canvas Name="ImageCanvas" 
                                PointerWheelChanged="Canvas_PointerWheelChanged"
                                PointerExited="Canvas_OnPointerExited"
                                RenderOptions.EdgeMode="Aliased" 
                                RenderOptions.BitmapInterpolationMode="None"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch" >
                            <Border Background="{StaticResource BgBrush}" 
                                    Canvas.Left="{Binding (Canvas.Left), ElementName=EditorImage}"
                                    Canvas.Top="{Binding (Canvas.Top), ElementName=EditorImage}"
                                    Height="{Binding Bounds.Height, ElementName=EditorImage}"
                                    Width="{Binding Bounds.Width, ElementName=EditorImage}"></Border>
                            <Image Name="EditorImage" 
                                   Source="{Binding CanvasBitmap}"
                            />
                            <Canvas Name="SelectionOverlay" 
                                    PointerWheelChanged="Canvas_PointerWheelChanged"
                                    IsVisible="{Binding HasSelection}"
                                    Canvas.Left="{Binding (Canvas.Left), ElementName=EditorImage}"
                                    Canvas.Top="{Binding (Canvas.Top), ElementName=EditorImage}"
                                    Width="{Binding Bounds.Width, ElementName=EditorImage}"
                                    Height="{Binding Bounds.Height, ElementName=EditorImage}">
                                <Path Name="SelectionPathBlack" 
                                      StrokeThickness="1" StrokeDashArray="4,4,4,4"
                                      Stroke="Black" StrokeJoin="Miter"
                                      IsHitTestVisible="False"/>
                                <Path Name="SelectionPathWhite"  
                                      StrokeThickness="1" StrokeJoin="Miter"
                                      Stroke="White" StrokeDashArray="4,4,4,4"
                                      IsHitTestVisible="False"/>


                            </Canvas>
                        </Canvas>
                    </Grid>
                </ClassicBorderDecorator>

                
            </DockPanel>
        </DockPanel>
    </ClassicBorderDecorator>
</Window>