<ClassicWindow xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:PixelEditor.ViewModels"
        xmlns:pixelEditor="clr-namespace:PixelEditor"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="600"
        x:Class="PixelEditor.MainWindow" 
        Icon="/Assets/Bitmap16.png" 
        x:DataType="{x:Type vm:MainViewModel}"
        RenderOptions.TextRenderingMode="SubpixelAntialias"
        FontFamily="Segoe UI, SF Pro Display, Noto Sans, Cantarel"
        TextBlock.LetterSpacing="0.4"
        FontSize="12"
        Title="Pixel Art Editor">
    
    <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <!-- Menu -->
        <Menu Grid.Row="0">
            <MenuItem Header="File">
                <MenuItem Header="New" Command="{Binding NewCommand}"/>
                <MenuItem Header="Open" Command="{Binding OpenCommand}"/>
                <MenuItem Header="Save" Command="{Binding SaveCommand}"/>
                <Separator/>
                <MenuItem Header="Exit" Command="{Binding ExitCommand}"/>
            </MenuItem>
            <MenuItem Header="Palette">
                <MenuItem Header="Reset to Default" Command="{Binding ColorPaletteViewModel.LoadDefault16BitColorsCommand}" />
                <MenuItem Header="Add Current Color" Command="{Binding AddCurrentColorCommand}" />
            </MenuItem>
            <MenuItem Header="View">
                <MenuItem Header="Center Canvas" Click="CenterCanvas_Click" />
            </MenuItem>
        </Menu>
        
        <Separator Grid.Row="1"></Separator>
        
        <!-- Tools -->
        <WrapPanel Grid.Row="2">
            <StackPanel Orientation="Horizontal" Margin="5 0">
                <StackPanel.Styles>
                    <Style Selector="ToggleButton:checked Grid">
                        <Setter Property="Margin" Value="1 1 -1 -1"></Setter>
                    </Style>
                </StackPanel.Styles>
                
                <Button Width="22" Height="22" Padding="0" Margin="0 0 5 0">
                    <Image Source="Assets/Pencil16.png"></Image>
                </Button>
                
                
                
                <ToggleButton Width="22" Height="22" Padding="0" IsChecked="{Binding IsSelectionToolSelected}" Focusable="False">
                    <Grid Width="16" Height="16">
                        <Image Margin="0" Height="16" Source="/Assets/Selection16.png"></Image>
                    </Grid>
                </ToggleButton>
                <ToggleButton Width="22" Height="22" Padding="0" IsChecked="{Binding IsPencilToolSelected}" Focusable="False">
                    <Grid Width="16" Height="16">
                        <Image Margin="0" Height="16" Source="/Assets/Pencil16.png"></Image>
                    </Grid>
                </ToggleButton>
                <ToggleButton Width="22" Height="22" Padding="0" IsChecked="{Binding IsFillToolSelected}" Focusable="False">
                    <Grid Width="16" Height="16">
                        <Image Margin="0" Height="16" Source="/Assets/Fill16.png"></Image>
                    </Grid>
                </ToggleButton>
                
                <RadioButton IsVisible="False" Content="Pencil" IsChecked="{Binding IsPencilToolSelected}" Margin="5"/>
                <RadioButton IsVisible="False" Content="Selection" IsChecked="{Binding IsSelectionToolSelected}" Margin="5"/>
                <RadioButton IsVisible="False" Content="Fill" IsChecked="{Binding IsFillToolSelected}" Margin="5"/>
                 
            </StackPanel>
        </WrapPanel>

        <!-- Color Palette -->
        <StackPanel Grid.Row="3" Margin="5">
            <TextBlock Text="Color Palette:" Margin="0,0,0,5"/>
            <StackPanel Orientation="Horizontal">
                <ClassicBorderDecorator BorderStyle="Sunken" BorderThickness="1" Margin="0 0 5 0">
                    <Grid Width="63" Background="{StaticResource BgBrush}">
                        <Border Margin="10" HorizontalAlignment="Right" VerticalAlignment="Bottom" 
                                Background="{Binding SecondaryColor, Converter={StaticResource ColorToBrushConverter}}" 
                                BorderBrush="Black" Width="24" Height="24" BorderThickness="1" />
                        <Border Margin="10" HorizontalAlignment="Left" VerticalAlignment="Top" 
                                Background="{Binding PrimaryColor, Converter={StaticResource ColorToBrushConverter}}" 
                                BorderBrush="Black" Width="24" Height="24" BorderThickness="1" />
                    </Grid>
                </ClassicBorderDecorator>
                <pixelEditor:ColorPaletteControl DataContext="{Binding ColorPaletteViewModel}" Height="64"/>
            </StackPanel>
        </StackPanel>
        
        <!-- Canvas --> 
        <ClassicBorderDecorator 
                  PointerPressed="Canvas_PointerPressed"
                  PointerMoved="Canvas_PointerMoved"
                  PointerReleased="Canvas_PointerReleased"
                  PointerWheelChanged="CanvasContainer_PointerWheelChanged"
            Background="Gray" Grid.Row="4" BorderStyle="Sunken" BorderThickness="2" Margin="5 0" >
            <Grid x:Name="CanvasContainer" ClipToBounds="True">
                <Canvas Name="ImageCanvas" 
                        RenderOptions.EdgeMode="Aliased" 
                        RenderOptions.BitmapInterpolationMode="None"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch" >
                    <Border Background="{StaticResource BgBrush}" 
                            Canvas.Left="{Binding (Canvas.Left), ElementName=EditorImage}"
                            Canvas.Top="{Binding (Canvas.Top), ElementName=EditorImage}"
                            Height="{Binding Bounds.Height, ElementName=EditorImage}"
                            Width="{Binding Bounds.Width, ElementName=EditorImage}"></Border>
                    <Image Name="EditorImage" 
                           Source="{Binding CanvasBitmap}"
                    />
                </Canvas>
            </Grid>
        </ClassicBorderDecorator>

        
        <!-- Status Bar -->
        <StackPanel Grid.Row="5" Orientation="Horizontal" Margin="5 1">
            <TextBlock VerticalAlignment="Center" Text="{Binding StatusText}" Margin="0 0 5 0"/>
            <TextBlock VerticalAlignment="Center" Text="{Binding PositionText}" Margin="5 0"/>
            <TextBlock VerticalAlignment="Center" Text="{Binding CanvasSizeText}" Margin="5 0"/>
            <TextBlock VerticalAlignment="Center" Margin="5 0">
                Scaled Canvas: <Run Text="{Binding Bounds.Width, ElementName=EditorImage}" />x<Run Text="{Binding Bounds.Height, ElementName=EditorImage}" />
            </TextBlock>
        </StackPanel>
    </Grid>
</ClassicWindow>